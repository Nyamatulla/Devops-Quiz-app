pipeline {
    agent any

    tools {
        jdk 'jdk11'
        maven 'maven3'
    }

    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the source code from SCM
                checkout scm
            }
        }

        stage("Sonarqube Analysis") {
            steps {
                bat """
                    mvn clean package ${SCANNER_HOME}/bin/sonar-scanner -Dsonar.host.url=http://localhost:9000/ 
                    -Dsonar.login=squ_57175fb85e5e04a2ec5b1cf671dd3b2ea14b156b -Dsonar.projectName=Dev-Quiz -Dsonar.java.binaries=.
                """
            }
        }

        stage('Build') {
            steps {
                // Build the application using Maven
                script {
                    echo 'Building the application'
                    bat 'mvn clean install'
                    echo 'Build successful'
                }
            }
        }

        stage('Build and push to Nexus') {
            steps {
                configFileProvider([configFile(fileId: '40201249-cc58-4199-a7c7-f4141d8640da', variable: 'mavensettings')]) {
                    bat "mvn -s $mavensettings clean deploy -DskipTests=true"
                }
            }
        }

        stage('Deploy') {
            steps {
                // Build Docker image
                script {
                    echo 'Building Docker image'
                    bat 'docker build -t dev-quiz-image .'
                    echo 'Build successful'
                }

                // Deploy the application using Docker
                bat 'docker run -p 8081:8081 --name quiz dev-quiz-image'
            }
        }
    }
}
